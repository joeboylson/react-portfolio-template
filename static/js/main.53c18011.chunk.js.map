{"version":3,"sources":["components/Nav/Nav.tsx","components/App/Page.tsx","components/Pages/LandingPage.tsx","components/Pages/Home.tsx","components/Pages/About.tsx","components/Pages/Contact.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Nav","Props","React","useState","expanded","setExpanded","navStyle","transform","transitionDuration","transitionTimingFunction","transformOrigin","navExpandStyle","top","right","onClick","id","style","Close","Menu","setPage","Page","className","children","LandingPage","href","cursor","Home","src","alt","About","Contact","action","type","App","page","opacity","pointerEvents","pageStyle","pageName","console","log","transitionDelay","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"65BAUA,IA0CeA,EA1CkB,SAACC,GAAW,IAAD,EAEVC,IAAMC,UAAS,GAFL,mBAEnCC,EAFmC,KAEzBC,EAFyB,KAKpCC,EAAW,CACfC,UAAU,cAAD,OAAiBH,EAAW,IAAM,QAAlC,KACTI,mBAAoB,OACpBC,yBAA0B,4BAC1BC,gBAAiB,SAIbC,EAAiB,CACrBJ,UAAU,cAAD,OAAgBH,EAAW,mCAAqC,IAAhE,KACTQ,IAAI,eACJC,MAAO,gBAGT,OAEE,6BAEE,yBACEC,QAAS,kBAAMT,GAAaD,IAC5BW,GAAI,aACJC,MAAK,KAAMf,EAAMe,MAAZ,GAAsBL,IAEzBP,EAAW,kBAACa,EAAA,EAAD,MAAY,kBAACC,EAAA,EAAD,OAI3B,yBAAKH,GAAG,MAAMC,MAAK,KAAMf,EAAMe,MAAZ,GAAsBV,IACvC,wBAAIQ,QAAS,WAAOb,EAAMkB,QAAQ,eAAgBd,GAAY,KAA9D,gBACA,wBAAIS,QAAS,WAAOb,EAAMkB,QAAQ,QAASd,GAAY,KAAvD,QACA,wBAAIS,QAAS,WAAOb,EAAMkB,QAAQ,SAAUd,GAAY,KAAxD,SACA,wBAAIS,QAAS,WAAOb,EAAMkB,QAAQ,WAAYd,GAAY,KAA1D,cC3BOe,G,MATmB,SAACnB,GAEjC,OACE,yBAAKoB,UAAW,OAAQL,MAAOf,EAAMe,OAClCf,EAAMqB,YCiBEC,EAvBiC,SAACtB,GAC/C,OACE,6BACE,2CAEA,6BACE,wDACA,6BAAK,6BACL,kEAAuC,uBAAGuB,KAAK,iCAAR,oBAAvC,KACA,sHACA,6FACA,4CACA,6BAAK,8BAIP,yBAAKV,QAAS,kBAAMb,EAAMkB,QAAQ,SAASH,MAAO,CAACS,OAAQ,YACzD,kDCbOC,EAVQ,WACrB,OACE,6BACE,oCACA,mxEACA,yBAAKC,IAAI,kCAAkCC,IAAI,OCMtCC,EAXS,WACtB,OACE,6BACE,qCACA,s5OCaSC,EAjBW,WACxB,OACE,6BACE,uCACA,kuBAIA,0BAAMC,OAAO,IACX,2BAAOC,KAAK,SACZ,2BAAOA,KAAK,SACZ,6CC6DOC,EAzDO,WAAO,IAAD,EAGF/B,IAAMC,SAAqC,eAHzC,mBAGnB+B,EAHmB,KAGbf,EAHa,KAMpBb,EAAW,CACf6B,QAAQ,GAAD,OAAc,gBAATD,EAAyB,EAAI,GACzCE,cAAc,GAAD,OAAc,gBAATF,EAAyB,GAAK,QAChD1B,mBAAoB,QAIhB6B,EAAY,SAACC,GAIjB,OAFAC,QAAQC,IAAIF,EAAUJ,GAEf,CACL3B,UAAU,cAAD,OAAiB+B,IAAaJ,EAAO,IAAM,QAA3C,KACTC,QAAQ,GAAD,OAAMG,IAAaJ,EAAO,IAAM,KACvCO,gBAAiB,UAKrB,OACE,yBAAK1B,GAAG,OAGN,kBAAC,EAAD,CAAKI,QAASA,EAASH,MAAOV,IAE9B,0BAAMS,GAAG,QAIP,kBAAC,EAAD,CAAMC,MAAOqB,EAAU,gBACrB,kBAAC,EAAD,CAAalB,QAASA,KAGxB,kBAAC,EAAD,CAAMH,MAAOqB,EAAU,SACrB,kBAAC,EAAD,OAGF,kBAAC,EAAD,CAAMrB,MAAOqB,EAAU,UACrB,kBAAC,EAAD,OAGF,kBAAC,EAAD,CAAMrB,MAAOqB,EAAU,YACrB,kBAAC,EAAD,UCrDUK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.53c18011.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Nav.css'\r\nimport { Menu, Close } from '@material-ui/icons';\r\n\r\nexport interface PageProps {\r\n  style?: any;\r\n  onClick?: any;\r\n  setPage: any\r\n}\r\n\r\nconst Nav: React.FC<PageProps> = (Props) => {\r\n\r\n  const [expanded, setExpanded] = React.useState(false)\r\n\r\n  // controls up/down movement of nav\r\n  const navStyle = {\r\n    transform: `translateY(${ expanded ? '0' : '-100%'})`,\r\n    transitionDuration: '0.5s',\r\n    transitionTimingFunction: 'cubic-bezier(.68,0,.32,1)',\r\n    transformOrigin: '50% 0'\r\n  } as React.CSSProperties;\r\n\r\n  // icon styling\r\n  const navExpandStyle = {\r\n    transform: `translateY(${expanded ? 'calc(100vh - (var(--space) * 4))' : '0'})`,\r\n    top: `var(--space)`,\r\n    right: 'var(--space)'\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      \r\n      <div \r\n        onClick={() => setExpanded(!expanded)}\r\n        id={'nav-expand'}\r\n        style={{...Props.style, ...navExpandStyle}}\r\n      >\r\n        { expanded ? <Close /> : <Menu /> }\r\n      </div>\r\n\r\n      {/* use passed setpage property to set 'page' in App.tsx */}\r\n      <div id='nav' style={{...Props.style, ...navStyle}}>\r\n        <h1 onClick={() => {Props.setPage('landingpage'); setExpanded(false)}}>Landing Page</h1>\r\n        <h1 onClick={() => {Props.setPage('home'); setExpanded(false)}}>Home</h1>\r\n        <h1 onClick={() => {Props.setPage('about'); setExpanded(false)}}>About</h1>\r\n        <h1 onClick={() => {Props.setPage('contact'); setExpanded(false)}}>Contact</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport './Page.css';\r\n\r\nexport interface PageProps {\r\n  style?: any;\r\n  onClick?: any;\r\n}\r\n\r\n// wraps child in 'page' class; \r\n// applies styling\r\nconst Page: React.FC<PageProps> = (Props) => {\r\n\r\n  return (\r\n    <div className={'page'} style={Props.style}>\r\n      {Props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\nimport {PageNameProps} from '../App/App';\r\n\r\n\r\nexport interface LandingPageProps {\r\n  setPage: Dispatch<SetStateAction<PageNameProps['pageNames']>>\r\n}\r\n\r\nconst LandingPage: React.FC<LandingPageProps> = (Props) => {\r\n  return (\r\n    <div>\r\n      <h1>LandingPage</h1>\r\n\r\n      <div>\r\n        <h2>Welcome to my portfolio.</h2>\r\n        <br/><br/>\r\n        <p>This is a template built off of the <a href=\"https://create-react-app.dev/\">Create React App</a>.</p>\r\n        <p>It is meant to give you a clean navigation with a few template pages to start out with.</p>\r\n        <p>Feel free to fork this repository and use it however you wish!</p>\r\n        <p>#happyhacking</p>\r\n        <br/><br/>\r\n      </div>\r\n\r\n      {/* use passed setPage property to set 'page' in App.tsx */}\r\n      <div onClick={() => Props.setPage('home')} style={{cursor: 'pointer'}}>\r\n        <p>Continue to Home</p>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default LandingPage;","import React from 'react';\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n      <h3>Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta repellendus deserunt facere ipsum dicta architecto, sit nam reprehenderit, quod non exercitationem! Mollitia pariatur odio repellat, beatae eos non repellendus omnis, maiores dolores tenetur odit temporibus. A, repellat saepe. Suscipit quis cupiditate hic ullam nemo ipsa animi tempora dolor cum adipisci facere totam omnis, quam voluptatibus error exercitationem reiciendis, sunt eveniet, culpa minus facilis dolorum corporis. Ipsam cupiditate error provident recusandae rerum unde distinctio ducimus minima debitis magni reiciendis dolores deleniti quis, quo maiores quaerat accusantium neque! Soluta iure consequatur enim ipsam nisi impedit! Sed repudiandae, aliquam vitae eum, tenetur sint consequatur adipisci a est architecto provident sit deleniti dignissimos perspiciatis, eligendi distinctio fugiat sunt labore quam facilis? Quod odio dignissimos nam reprehenderit. Doloribus qui eligendi quo vitae quibusdam mollitia est, ratione, velit nemo magni quis sapiente ad dolores eaque ab, tenetur nostrum repellat tempora! Quas tempore placeat atque blanditiis, ipsa molestias cumque excepturi cupiditate, architecto quidem sit voluptates officiis officia perferendis a reprehenderit unde dolor ex. In, fugit dolor veniam aperiam voluptates doloremque vero officia voluptas modi quasi esse ea nam reprehenderit assumenda libero aliquid tempora optio magnam maxime corporis laudantium itaque eum iusto. Ullam, error porro. Soluta neque possimus sequi cum, pariatur architecto repudiandae odio assumenda dolores id voluptate natus odit error repellat nesciunt libero! In aperiam minus, similique laboriosam nihil consequuntur odit libero natus itaque, nesciunt neque, dignissimos magnam earum dolores molestiae aliquam quia reprehenderit quasi unde aut commodi id consequatur iste ad? Obcaecati, veniam repudiandae beatae alias repellat quam nisi et iste distinctio tempora laborum quos blanditiis laudantium non accusamus nam a optio rerum explicabo. Maxime facilis soluta iste accusamus quibusdam inventore commodi quia rerum, necessitatibus minus tempora delectus debitis laboriosam. Consequuntur provident voluptas porro nesciunt necessitatibus ipsum, commodi perspiciatis at mollitia doloribus, ratione vel tempore odio.</h3>\r\n      <img src=\"https://via.placeholder.com/300\" alt=\"\"/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <h1>About</h1>\r\n      <h3>\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Et nostrum ducimus ea excepturi obcaecati enim nemo, eaque veritatis sunt error perspiciatis non minima suscipit unde reprehenderit, blanditiis magni accusamus sed quidem? Quam esse nisi facere atque, praesentium dignissimos impedit laboriosam natus voluptatum nobis eius nulla libero, dolor perferendis ratione iure, eveniet veritatis. Unde velit at ratione, atque voluptates, consequatur facere voluptate vitae quas temporibus delectus maiores voluptas iusto reprehenderit asperiores doloribus quae molestias praesentium quod iste harum. Libero omnis quaerat mollitia voluptatum animi officiis nesciunt aliquid quis, quisquam rem illo et sapiente suscipit, deleniti laboriosam! Officia quibusdam recusandae laboriosam sapiente est tempore? Ad veniam quidem ex amet. Qui repudiandae suscipit praesentium excepturi possimus corrupti dolor dignissimos consequuntur placeat veritatis quasi deleniti perspiciatis officiis consequatur eveniet ea officia, ipsam, aspernatur mollitia ratione, voluptatibus exercitationem! Magnam at adipisci soluta hic? Voluptate dolorum unde esse cupiditate quibusdam maxime corporis libero deserunt sed, amet repellendus aliquam aliquid nemo quam vitae facilis impedit expedita blanditiis beatae praesentium perspiciatis. Libero, doloribus? Quos earum omnis possimus consequatur rerum. Atque non asperiores sapiente consequuntur soluta dolore ut cumque, repellendus eius ducimus et ea quod doloremque explicabo commodi in hic alias amet minus maxime neque placeat voluptatum consectetur eligendi? Sunt sed quae natus debitis voluptates blanditiis, et beatae quibusdam tempore odit est voluptas quis optio quidem itaque! Commodi enim molestiae expedita consequuntur aliquam eius natus officia recusandae modi. Nostrum saepe eos officia eveniet? Assumenda modi quasi odit labore repellat, asperiores officia sit, aliquid commodi veritatis dolor ullam! Totam ad id reiciendis ratione mollitia sapiente soluta doloribus nam voluptates, aliquid error at. Ipsa vero doloremque optio architecto quam corporis ipsum asperiores aperiam suscipit ad, molestiae nobis sit quaerat rerum aliquid incidunt obcaecati! Dolores maxime obcaecati ducimus qui ullam? Obcaecati tempore ea tempora autem. Officiis dolore, nihil nulla ipsum totam nam quo quidem reprehenderit doloribus molestias aliquam eius nisi tenetur sed molestiae, facilis ipsam. Officia obcaecati ea repudiandae ipsam accusamus perferendis velit nisi, soluta cum, minus amet veniam natus itaque magni nobis saepe, placeat iste mollitia eligendi neque odit! Dolorem modi voluptatum dolor quaerat provident sequi accusantium nisi itaque nihil asperiores sunt odio placeat impedit earum temporibus mollitia ut illum sed nostrum, quos aut molestias saepe minus delectus. Expedita a, sapiente id deleniti repudiandae possimus libero facilis blanditiis? Pariatur voluptas, tempore asperiores laboriosam consectetur sunt ipsum doloribus iusto! Officia nihil accusamus repellat, est reprehenderit distinctio obcaecati eum placeat provident incidunt odit minima dolores vero cum et velit fuga laborum doloribus dolorem expedita possimus fugit veniam sit? Distinctio exercitationem vel magni et veritatis, dolor magnam quasi minus rem, animi maxime recusandae? Aliquid laborum in sequi eveniet fuga corporis neque cum repellendus quidem unde quae, quasi ab officiis modi? Magni ratione repudiandae error laudantium eius. Distinctio provident libero, facilis iusto earum, necessitatibus quod vel, unde amet itaque veritatis illo vero corrupti aperiam incidunt. Dolorem rem dicta, in autem iure reprehenderit voluptatum? Natus, illum! Exercitationem deleniti aspernatur omnis molestiae quidem, nemo incidunt quae illo, eaque a placeat. Veritatis facilis quam distinctio minus. Nesciunt tempora voluptate odio obcaecati in sit qui, repudiandae consequatur eveniet odit, facilis hic iste natus adipisci aliquam voluptatibus ea neque exercitationem fuga quos necessitatibus pariatur possimus dolore. Nisi commodi dignissimos temporibus? Voluptas vel voluptatum doloremque quia excepturi dignissimos facere dolorum recusandae dolores provident impedit saepe consectetur non dolore quibusdam, accusamus eaque minus illum esse distinctio. Exercitationem maxime obcaecati qui vero impedit ea a blanditiis, cum cumque temporibus facilis eaque aliquid id. Illo eos repellendus ea odit rerum amet eligendi inventore ex officiis ipsa, dolores perferendis commodi, laudantium dolorem cupiditate possimus aliquam expedita omnis consequatur. Adipisci natus dolorem minima ut earum. Placeat vel inventore provident in cumque quo consequatur laboriosam hic, autem modi harum at soluta quaerat! Aut, atque. Quos, ipsa at. Facilis non sit totam hic eveniet at dolorum sed excepturi, odio, ipsam iusto ex! Debitis, qui. Iste mollitia nesciunt temporibus molestias. Quo, maiores veritatis. Distinctio hic dolorem voluptate vel numquam porro reiciendis quos sequi similique dicta qui aliquid quidem harum, quia ullam officiis cupiditate perferendis explicabo temporibus in animi ut voluptatibus. Molestias nisi laborum voluptas maxime amet earum hic impedit consequatur accusamus architecto eius natus repellat sint nulla nesciunt odio sunt, dignissimos quidem? Voluptates magnam dolore illum! Consequatur beatae voluptatibus ipsum eius quo odio a saepe natus adipisci dolorem qui accusamus rerum, cumque cum nihil officiis debitis laudantium quos enim commodi sed? Veritatis architecto eum quae ratione nisi cumque ea, quibusdam necessitatibus pariatur ducimus, hic dolores, aut expedita vel? Veritatis similique aliquam a quidem dolorum ex tempore omnis odit totam reiciendis ducimus laudantium dolores harum ipsum, voluptas unde expedita molestias. Harum voluptate esse assumenda, dignissimos officia soluta eum atque ipsum totam molestiae, quidem, porro facilis ipsam deleniti iusto dolorum suscipit fugit vero doloremque aperiam. Facere ullam cupiditate asperiores. Non harum reiciendis vitae, quis velit mollitia, cumque maiores itaque, pariatur eaque saepe illo? Odio alias iure aut laborum atque vel maiores est velit ipsum perspiciatis tempore sequi assumenda nesciunt cupiditate minus, voluptatibus, asperiores animi eaque tenetur culpa illo deleniti. Officiis obcaecati aut porro similique inventore optio, velit natus omnis? Aliquam id architecto, esse accusamus suscipit cumque. Distinctio, cum reiciendis. Dolorem, accusamus. Placeat possimus ex iure! Cupiditate quam nulla suscipit quis debitis nam quod ullam rem recusandae eos? Nostrum, iure dicta culpa, autem tempore vitae rem nesciunt saepe obcaecati dolorem vel libero? Natus aliquam nihil, quod odit, molestiae quidem eius placeat recusandae nesciunt beatae doloremque soluta? Dicta beatae libero ipsum ullam quidem culpa repellendus quasi dolores reprehenderit, nam maxime sequi voluptatum. Vitae fugit a, qui rem, hic possimus corrupti modi ad pariatur ea sed quaerat impedit officiis laborum excepturi culpa enim perspiciatis sit. Esse, eveniet. Ipsum recusandae commodi atque dolore. Voluptas, error. Accusamus excepturi vitae nam quod itaque nobis nemo dolore quibusdam expedita temporibus enim laborum reprehenderit voluptas veritatis, laboriosam consequuntur. Facilis cumque vitae voluptate quo aut delectus deserunt corrupti inventore, cum quod illum tenetur, nesciunt vel, odit distinctio iure earum officia doloribus adipisci? Excepturi vitae est accusamus earum harum, at nulla ipsam eum ex reprehenderit laborum ut minima temporibus quaerat consequatur.\r\n      </h3>\r\n    </ div>\r\n  )\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Contact: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <h1>Contact</h1>\r\n      <h3>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quam, adipisci reiciendis est temporibus possimus aspernatur quidem? Aliquid maiores ea nisi amet eaque, autem magni ex maxime beatae ullam nostrum officia! Rem cumque corrupti maiores fugiat quidem minus fuga, molestiae aut ipsum dolores repellat inventore assumenda, iusto vel maxime error molestias soluta qui ratione? Culpa quaerat a illo eos nostrum impedit nesciunt expedita cupiditate ea eaque? Omnis, at eveniet illum, molestias dolor quo ut esse, ad repellat quibusdam dolores culpa debitis eius veritatis amet nisi commodi quisquam. Fugit, rerum. Pariatur earum minus exercitationem at modi. Impedit ex nihil aperiam perspiciatis quisquam?\r\n      </h3>\r\n\r\n      <form action=\"\">\r\n        <input type=\"text\"/>\r\n        <input type=\"text\"/>\r\n        <button>SUBMIT</button>\r\n      </form>\r\n    </ div>\r\n  )\r\n};\r\n\r\nexport default Contact;","import React from 'react';\nimport './App.css';\n\nimport Nav from '../Nav/Nav';\nimport Page from './Page';\n\n// pages\nimport LandingPage from '../Pages/LandingPage';\nimport Home from '../Pages/Home';\nimport About from '../Pages/About';\nimport Contact from '../Pages/Contact';\n\n// add your page name here\nexport interface PageNameProps {\n  pageNames: 'landingpage' | 'home' | 'about' | 'contact'\n}\n\nconst App: React.FC = () => {\n\n\n  const [page, setPage] = React.useState<PageNameProps['pageNames']>('landingpage')\n\n  // do not display nav if on landing page\n  const navStyle = {\n    opacity: `${page !== 'landingpage' ? 1 : 0}`,\n    pointerEvents: `${page !== 'landingpage' ? '' : 'none'}`,\n    transitionDuration: '0.5s'\n  } as React.CSSProperties;\n\n  // hide page if not current page\n  const pageStyle = (pageName:PageNameProps['pageNames']) => {\n\n    console.log(pageName, page)\n\n    return {\n      transform: `translateX(${ pageName === page ? '0' : '-100%' })`,\n      opacity: `${ pageName === page ? '1' : '0' }`,\n      transitionDelay: '0.25s'\n    } as React.CSSProperties;\n  }  \n\n\n  return (\n    <div id='app'>\n\n      {/* pass in setPage function; pass in navstyle */}\n      <Nav setPage={setPage} style={navStyle}/>\n\n      <main id='main'>\n\n        {/* pass in setPage function */}\n        {/* call pageStyle() to return styling specific to each page */}\n        <Page style={pageStyle('landingpage')}>\n          <LandingPage setPage={setPage}/>\n        </Page>\n\n        <Page style={pageStyle('home')}>\n          <Home />\n        </Page>\n\n        <Page style={pageStyle('about')}>\n          <About />\n        </Page>\n\n        <Page style={pageStyle('contact')}>\n          <Contact />\n        </Page>\n      </main>\n    \n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}